version: '3.8'

services:
  # MQTT Broker (Mosquitto)
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: mqtt-broker
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Maps host.docker.internal to the host's IP address in Docker
    ports:
      - "1883:1883"
      - "8083:8083"  # Optional: Enable WebSocket if needed
    volumes:
      - ./mqtt/config/mosquitto.config:/mosquitto/config/mosquitto.conf  # Mount config file
      - ./mqtt/data:/mosquitto/data       # Mount data directory
      - ./mqtt/logs:/mosquitto/log         # Mount logs directory
    networks:
      - preday1_network

  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: pretopgun
      MONGO_INITDB_ROOT_PASSWORD: pretopgun
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - preday1_network

  # Backend Service (Flask app)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      MONGO_URI: mongodb://pretopgun:pretopgun@mongodb:27017/preday1_database
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - preday1_network

  # Publisher Service
  publisher:
    build:
      context: ./publisher
    container_name: publisher
    environment:
      - MQTT_BROKER=mqtt-broker
      - MQTT_PORT=1883
    depends_on:
      - mqtt-broker
    networks:
      - preday1_network
    volumes:
      - ./logs/publisher:/app/logs  # Bind publisher log directory to container

  # Subscriber Service
  subscriber:
    build:
      context: ./subscriber
    container_name: subscriber
    environment:
      - MQTT_BROKER=mqtt-broker
      - MQTT_PORT=1883
      - MQTT_TOPIC=test/topic
    depends_on:
      - mqtt-broker
      - backend  # Ensure the backend is up before subscriber starts
    networks:
      - preday1_network
    volumes:
      - ./logs/subscriber:/app/logs  # Bind subscriber log directory to container

  # Frontend Service (React app)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - preday1_network

networks:
  preday1_network:
    driver: bridge

volumes:
  mongodb_data:
